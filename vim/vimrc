set nocompatible  " Vim, not vi.

call plug#begin()
Plug 'tpope/vim-sensible'

Plug 'eapache/rainbow_parentheses.vim'
Plug 'elixir-editors/vim-elixir'
Plug 'hashivim/vim-terraform'
Plug 'scrooloose/syntastic'
Plug 'slashmili/alchemist.vim'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-sleuth'

call plug#end()

let g:rbpt_colorpairs = [
\ ['darkgreen', 'darkgreen'],
\ ['darkmagenta', 'darkmagenta'],
\ ['darkyellow', 'darkyellow'],
\ ['darkblue', 'darkblue'],
\ ['darkgreen', 'darkgreen'],
\ ['darkred', 'darkred'],
\ ['darkgray', 'darkgray'],
\ ['cyan', 'cyan'],
\ ['green', 'green'],
\ ['magenta', 'magenta'],
\ ['brown', 'brown'],
\ ['blue', 'blue'],
\ ['green', 'green'],
\ ['red', 'red'],
\ ['gray', 'gray'],
\ ['white', 'white'],
\ ]

set autowrite          " Automatically save before commands like :next and :make
set cursorline         " Highlight current line
set foldmethod=indent
set foldlevel=99
set ignorecase         " Ignore case in search...
set smartcase          " ... unless we use capital letters.
set hlsearch           " Highlight search results
set list               " Show invisibles
set listchars=tab:▸\ ,eol:¬
set mouse=a            " Enable mouse usage (in all modes) in terminals
set showmatch          " Show matching brackets.
set softtabstop=2 tabstop=2 shiftwidth=2 expandtab " Default whitespace settings
set wildmode=list:longest
set backupdir=~/.vim/backup
set directory=~/.vim/backup
if version >= 703
  set colorcolumn=80     " Vertical line on column 80
  set undofile           " Persistent undo history
  set undodir=~/.vim/backup
endif


autocmd FocusLost * silent! wall
" set clipboard=unnamed " Share paste buffers with OS.

colorscheme industry

highlight WrongWhitespace ctermbg=red guibg=red
call matchadd('WrongWhitespace', '^ \+\t\+')
call matchadd('WrongWhitespace', '\s\+$')
autocmd ColorScheme * highlight WrongWhitespace ctermbg=red guibg=red

if version >= 704
  autocmd BufWritePre * :keeppatterns %s/\s\+$//e
else
  " You'll get space poop in your '/' history. Upgrade your vim.
  autocmd BufWritePre * :%s/\s\+$//e
endif

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.pyo,.pyc,.rbc

let wildignore = []
for suffix in split(&suffixes, ',')
  let wildignore += [ escape(suffix, '.~$') . '$' ]
endfor

" Retore last edit location when opening a file
autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$") | exe "normal g'\"" | exe "normal zz" | endif

" Raibow parens
au VimEnter * RainbowParenthesesActivate
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
au Syntax * set textwidth=80 formatoptions+=t

let c_space_errors=1

" My pinky finger is never fast enough.
command! W w
command! Q q
command! Qa qa
command! Wa wa
command! Wq wq

" Select pasted text
noremap gp `[v`]`

" Syntastic is too slow on cucumber
let g:syntastic_mode_map = {
\ 'mode': 'active',
\ 'passive_filetypes': [
  \ 'cucumber',
\ ],
\}

function! FzyCommand(choice_command, vim_command)
  try
    let output = system(a:choice_command . " | fzy ")
  catch /Vim:Interrupt/
    " Swallow errors from ^C, allow redraw! below
  endtry
  redraw!
  if v:shell_error == 0 && !empty(output)
    exec a:vim_command . ' ' . output
  endif
endfunction

nnoremap <leader>e :call FzyCommand("ack . -l", ":e")<cr>
nnoremap <leader>v :call FzyCommand("ack . -l", ":vs")<cr>
nnoremap <leader>s :call FzyCommand("ack . -l", ":sp")<cr>

" <C-@> is what vim gets when you press Control+Space
inoremap <C-@> <c-x><c-o>

autocmd FileType elixir let b:dispatch = 'mix test'
nnoremap  :Dispatch<CR>
