set nocompatible       " Use Vim defaults instead of 100% vi compatibility

filetype off
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"Plugin 'nathanaelkane/vim-indent-guides'  " I never remeber to use this. Maybe one day.
Plugin 'bling/vim-airline'
Plugin 'edkolev/promptline.vim'
Plugin 'edsono/vim-matchit'
Plugin 'gmarik/Vundle.vim'
Plugin 'bling/vim-bufferline'
Plugin 'guns/vim-clojure-static' " I was here. Check these docs.
Plugin 'kien/ctrlp.vim'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'klen/python-mode'
Plugin 'kovisoft/paredit'
Plugin 'leshill/vim-json'
Plugin 'msanders/snipmate.vim'
Plugin 'nvie/vim-pep8'
Plugin 'raimondi/delimitMate'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-classpath'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-fireplace'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-leiningen'
Plugin 'tpope/vim-projectionist'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-rsi'
Plugin 'tpope/vim-salve'
Plugin 'tpope/vim-surround'
Plugin 'wting/rust.vim'

call vundle#end()

set autoindent         " Auto indent new lines
set smartindent        " Make autoindent smarter
set smarttab           " Proper indenting with <Tab>
set autowrite          " Automatically save before commands like :next and :make
set backspace=indent,eol,start " more powerful backspacing
set cursorline         " Highlight current line
set foldmethod=indent
set foldlevel=99
set hidden             " Hide buffers when they are abandoned
set history=50         " keep 50 lines of command line history
set ignorecase         " Wait for smartcase...
set smartcase          " Do smart case matching when searching
set incsearch          " Incremental search
set hlsearch           " Highlight search results
set list               " Show invisibles
set listchars=tab:▸\ ,eol:¬
set mouse=a            " Enable mouse usage (all modes) in terminals
set ruler              " show the cursor position all the time
set scrolloff=3        " Never lean to the top or bottom of the window
set showcmd            " Show (partial) command in status line.
set showmatch          " Show matching brackets.
set softtabstop=4 tabstop=4 shiftwidth=4 expandtab " Default whitespace settings
set viminfo='20,\"50   " read/write a .viminfo file, don't store more than 50 lines of registers
set wildmenu           " Enhanced command-line completion.
set wildmode=list:longest " Show all alternatives and complete furtherest possible.
set backupdir=~/.vim/backup
set directory=~/.vim/backup
if version >= 703
    set colorcolumn=80     " Vertical line on column 80
    set undofile           " Persistent undo history
    set undodir=~/.vim/backup
endif

filetype plugin indent on  " Enables filetype specific stuff

autocmd FocusLost * silent! wall
set clipboard=unnamed " Share paste buffers with OS.

set background=dark
colorscheme darkblue

highlight WrongWhitespace ctermbg=red guibg=red
call matchadd('WrongWhitespace', '^ \+\t\+')
call matchadd('WrongWhitespace', '\s\+$')
autocmd ColorScheme * highlight WrongWhitespace ctermbg=red guibg=red

" Why, tpope? Why does it have to be me? :(
autocmd BufRead,BufNewFile *.cljs setlocal filetype=clojure

if version >= 704
    autocmd BufWritePre * :keeppatterns %s/\s\+$//e
else
    " You'll get space poop in your '/' history. Upgrade your vim.
    autocmd BufWritePre * :%s/\s\+$//e
endif

if !exists("syntax_on")
  syntax on " Use syntax highlighting
endif

nnoremap <leader>g :GundoToggle<CR>
let g:gundo_close_on_revert = 1

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.pyo,.pyc,.rbc

nnoremap <leader>n :NERDTreeToggle<CR>
let NERDTreeIgnore = []
for suffix in split(&suffixes, ',')
    let NERDTreeIgnore += [ escape(suffix, '.~$') . '$' ]
endfor
let NERDTreeMinimalUI=1

" Retore last edit location when opening a file
autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$") | exe "normal g'\"" | exe "normal zz" | endif

" Raibow parens
au VimEnter * RainbowParenthesesActivate
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
au Syntax * RainbowParenthesesLoadChevrons

let g:pyflakes_use_quickfix = 0

" Highlight space errors in C/C++ source files (Vim tip #935)
let c_space_errors=1

" My pinky finger is never fast enough.
command! W w
command! Q q
command! Qa qa
command! Wa wa
command! Wq wq

" Select pasted text
noremap gp `[v`]`

" Syntastic is too slow on cucumber
let g:syntastic_mode_map = {
    \ 'mode': 'active',
    \ 'passive_filetypes': [
        \ 'cucumber',
    \ ],
\}

let g:syntastic_python_checkers = ['frosted', 'pylama', 'mypy', 'pep257', 'pyflakes', 'flake8', 'py3kwarn', 'prospector', 'python']

nnoremap <leader>c :bwipeout<CR>

let g:ctrlp_match_window = ''
let g:ctrlp_max_files = ''
let g:ctrlp_max_depth=40

let g:airline_powerline_fonts = 1
let g:airline#extensions#bufferline#enabled = 1
